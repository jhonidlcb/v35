
# ===================================
# SoftwarePar - Configuración Nginx
# Compatible con aaPanel
# ===================================

# Configuración HTTP (redirige a HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name softwarepar.lat www.softwarepar.lat;

    # Redirigir todo el tráfico HTTP a HTTPS
    return 301 https://$server_name$request_uri;
}

# Configuración HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name softwarepar.lat www.softwarepar.lat;

    # Rutas de certificados SSL (ajustar según aaPanel)
    # aaPanel generalmente guarda los certificados en:
    # /www/server/panel/vhost/cert/
    ssl_certificate /www/server/panel/vhost/cert/softwarepar.lat/fullchain.pem;
    ssl_certificate_key /www/server/panel/vhost/cert/softwarepar.lat/privkey.pem;

    # Configuración SSL recomendada
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Headers de seguridad
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Directorio raíz (para archivos estáticos compilados)
    root /www/wwwroot/softwarepar.lat/dist/public;
    index index.html;

    # Logs (compatible con aaPanel)
    access_log /www/wwwlogs/softwarepar.lat.log;
    error_log /www/wwwlogs/softwarepar.lat.error.log;

    # Tamaño máximo de body (para uploads)
    client_max_body_size 50M;

    # Compresión gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Proxy para API y WebSocket
    location /api {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # WebSocket
    location /ws {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 86400;
    }

    # Servir archivos estáticos (assets compilados)
    location /assets {
        alias /www/wwwroot/softwarepar.lat/dist/public/assets;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Archivos públicos
    location /public {
        alias /www/wwwroot/softwarepar.lat/client/public;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Sitemap y robots.txt
    location ~ ^/(sitemap\.xml|robots\.txt)$ {
        try_files $uri @backend;
    }

    # SPA routing - todas las demás rutas van al index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Backend fallback
    location @backend {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
